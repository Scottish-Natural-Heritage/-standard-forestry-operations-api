{
	"info": {
		"_postman_id": "4892ccbd-3c85-404c-a272-868fcc5dd99d",
		"name": "v2-standard-forestry-operations-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5746803"
	},
	"item": [
		{
			"name": "404 Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404 Not Found', function () {",
							"    pm.response.to.have.status(404);",
							"    pm.response.to.have.status('Not Found');",
							"});",
							"",
							"pm.test('Message is \"Not found.\"', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Not found.');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Message is \"OK\"', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('OK');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('JSON response length is greater than 1', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.be.above(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"for (let i = 0; i < 3; i++) {\r",
							"  pm.sendRequest({\r",
							"    url:`http://localhost:3003/standard-forestry-operations-api/v1/applications`,\r",
							"    method:'POST'\r",
							"  });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.have.status('Created');",
							"});",
							"",
							"pm.test('Location is present', function () {",
							"    pm.response.to.have.header('Location');",
							"    ",
							"    pm.expect(pm.response.headers.get('Location')).to.include(",
							"        `http://localhost:3003/standard-forestry-operations-api/v2/applications/`",
							"    );",
							"});",
							"",
							"pm.collectionVariables.set(\"SFO_NEW_APP_ID\", pm.response.headers.get('Location').split('/').pop());",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"convictions\": false,\r\n  \"complyWithTerms\": true,\r\n  \"fullName\": \"Nature Scot\",\r\n  \"companyOrganisation\": \"NatureScot\",\r\n  \"addressLine1\": \"Great Glen House\",\r\n  \"addressLine2\": \"\",\r\n  \"addressTown\": \"Inverness\",\r\n  \"addressCounty\": \"\",\r\n  \"addressPostcode\": \"IV3 8NW\",\r\n  \"phoneNumber\": \"01463 725 000\",\r\n  \"emailAddress\": \"licensing@nature.scot\",\r\n  \"setts\": [\r\n  \t{\r\n  \t\t\"id\": \"ABC123\",\r\n  \t\t\"gridReference\": \"NH63054372\",\r\n  \t\t\"entrances\": 5\r\n  \t},\r\n  \t{\r\n  \t\t\"id\": \"DEF456\",\r\n  \t\t\"gridReference\": \"NH63044379\",\r\n  \t\t\"entrances\": 2\r\n  \t}\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Response contains edited field', function () {\r",
							"    var reqJsonData = JSON.parse(pm.request.body.raw);\r",
							"    var resJsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(reqJsonData.fullName).to.eql(resJsonData.fullName);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fullName\": \"Test Edit Works With Partial Object\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in to supply return",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Debug response is valid', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idInvalid).to.eql(false);\r",
							"    pm.expect(jsonData.idNotFound).to.eql(false);\r",
							"    pm.expect(jsonData.postcodeInvalid).to.eql(false);\r",
							"    pm.expect(jsonData.postcodeIncorrect).to.eql(false);\r",
							"    pm.expect(jsonData.urlInvalid).to.eql(false);\r",
							"    pm.expect(jsonData.token).to.not.eql(undefined);\r",
							"    pm.expect(jsonData.loginLink.startsWith('https://example.org/login?token=')).to.eql(true);\r",
							"    pm.expect(jsonData.loginLink.endsWith(jsonData.token)).to.eql(true);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}/login?postcode=IV3 8NW&redirectBaseUrl=https://example.org/login?token=",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}",
						"login"
					],
					"query": [
						{
							"key": "postcode",
							"value": "IV3 8NW"
						},
						{
							"key": "redirectBaseUrl",
							"value": "https://example.org/login?token="
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Returned object matches posted object', function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property('convictions');",
							"    pm.expect(jsonData).to.have.property('complyWithTerms');",
							"    ",
							"    pm.expect(jsonData).to.have.property('fullName');",
							"    pm.expect(jsonData).to.have.property('companyOrganisation');",
							"    pm.expect(jsonData).to.have.property('addressLine1');",
							"    pm.expect(jsonData).to.have.property('addressLine2');",
							"    pm.expect(jsonData).to.have.property('addressTown');",
							"    pm.expect(jsonData).to.have.property('addressCounty');",
							"    pm.expect(jsonData).to.have.property('addressPostcode');",
							"    pm.expect(jsonData).to.have.property('phoneNumber');",
							"    pm.expect(jsonData).to.have.property('emailAddress');",
							"    pm.expect(jsonData).to.have.property('Setts');",
							"",
							"    pm.expect(jsonData.Setts.length).to.eql(2);",
							"",
							"    pm.expect(jsonData.Setts[0]).to.have.property('id');;",
							"    pm.expect(jsonData.Setts[0]).to.have.property('gridRef');",
							"    pm.expect(jsonData.Setts[0]).to.have.property('entrances');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Setts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('JSON response length is greater than 1', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/setts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"setts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Sett",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.have.status('Created');",
							"});",
							"",
							"pm.test('Location is present', function () {",
							"    pm.response.to.have.header('Location');",
							"    ",
							"    pm.expect(pm.response.headers.get('Location')).to.include(",
							"        `http://localhost:3003/standard-forestry-operations-api/v2/applications/`",
							"    );",
							"});",
							"",
							"pm.collectionVariables.set(\"SFO_NEW_SETT_ID\", pm.response.headers.get('Location').split('/').pop());",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \t\t\"sett\": \"123456\",\r\n  \t\t\"gridReference\": \"NH63044379\",\r\n  \t\t\"entrances\": 6,\r\n        \"createdByLicensingOfficer\": \"939123\"\r\n  \t}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}/setts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}",
						"setts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Application With New Sett",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Returned object matches posted object', function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property('convictions');",
							"    pm.expect(jsonData).to.have.property('complyWithTerms');",
							"    ",
							"    pm.expect(jsonData).to.have.property('fullName');",
							"    pm.expect(jsonData).to.have.property('companyOrganisation');",
							"    pm.expect(jsonData).to.have.property('addressLine1');",
							"    pm.expect(jsonData).to.have.property('addressLine2');",
							"    pm.expect(jsonData).to.have.property('addressTown');",
							"    pm.expect(jsonData).to.have.property('addressCounty');",
							"    pm.expect(jsonData).to.have.property('addressPostcode');",
							"    pm.expect(jsonData).to.have.property('phoneNumber');",
							"    pm.expect(jsonData).to.have.property('emailAddress');",
							"    pm.expect(jsonData).to.have.property('Setts');",
							"",
							"    pm.expect(jsonData.Setts.length).to.eql(3);",
							"",
							"    pm.expect(jsonData.Setts[2]).to.have.property('id');",
							"    pm.expect(jsonData.Setts[2]).to.have.property('gridRef');",
							"    pm.expect(jsonData.Setts[2]).to.have.property('entrances');",
							"    pm.expect(jsonData.Setts[2]).to.have.property('createdByLicensingOfficer');",
							"    pm.expect(jsonData.Setts[2].createdByLicensingOfficer).to.eql('939123');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.have.status('Created');",
							"});",
							"",
							"pm.test('Location is present', function () {",
							"    pm.response.to.have.header('Location');",
							"    ",
							"    pm.expect(pm.response.headers.get('Location')).to.include(",
							"        `http://localhost:3003/standard-forestry-operations-api/v2/applications/`",
							"    );",
							"});",
							"",
							"pm.collectionVariables.set(\"SFO_NEW_NOTE_ID\", pm.response.headers.get('Location').split('/').pop());",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \t\t\"note\": \"THis is a test\",\r\n  \t\t\"createdBy\": \"939123\"\r\n  \t}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}/notes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Application with New Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Returned object matches posted object', function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property('convictions');",
							"    pm.expect(jsonData).to.have.property('complyWithTerms');",
							"    ",
							"    pm.expect(jsonData).to.have.property('fullName');",
							"    pm.expect(jsonData).to.have.property('companyOrganisation');",
							"    pm.expect(jsonData).to.have.property('addressLine1');",
							"    pm.expect(jsonData).to.have.property('addressLine2');",
							"    pm.expect(jsonData).to.have.property('addressTown');",
							"    pm.expect(jsonData).to.have.property('addressCounty');",
							"    pm.expect(jsonData).to.have.property('addressPostcode');",
							"    pm.expect(jsonData).to.have.property('phoneNumber');",
							"    pm.expect(jsonData).to.have.property('emailAddress');",
							"    pm.expect(jsonData).to.have.property('Notes');",
							"",
							"    pm.expect(jsonData.Notes.length).to.eql(1);",
							"",
							"    pm.expect(jsonData.Notes[0]).to.have.property('note');;",
							"    pm.expect(jsonData.Notes[0]).to.have.property('createdBy');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Sett",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}/setts/{{SFO_NEW_SETT_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}",
						"setts",
						"{{SFO_NEW_SETT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Application With no New Sett",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Returned object matches posted object', function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property('convictions');",
							"    pm.expect(jsonData).to.have.property('complyWithTerms');",
							"    ",
							"    pm.expect(jsonData).to.have.property('fullName');",
							"    pm.expect(jsonData).to.have.property('companyOrganisation');",
							"    pm.expect(jsonData).to.have.property('addressLine1');",
							"    pm.expect(jsonData).to.have.property('addressLine2');",
							"    pm.expect(jsonData).to.have.property('addressTown');",
							"    pm.expect(jsonData).to.have.property('addressCounty');",
							"    pm.expect(jsonData).to.have.property('addressPostcode');",
							"    pm.expect(jsonData).to.have.property('phoneNumber');",
							"    pm.expect(jsonData).to.have.property('emailAddress');",
							"    pm.expect(jsonData).to.have.property('Setts');",
							"",
							"    pm.expect(jsonData.Setts.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Application By LO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.have.status('Created');",
							"});",
							"",
							"pm.test('Location is present', function () {",
							"    pm.response.to.have.header('Location');",
							"    ",
							"    pm.expect(pm.response.headers.get('Location')).to.include(",
							"        `http://localhost:3003/standard-forestry-operations-api/v2/applications/`",
							"    );",
							"});",
							"",
							"pm.collectionVariables.set(\"SFO_NEW_APP_ID\", pm.response.headers.get('Location').split('/').pop());",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"convictions\": false,\r\n    \"complyWithTerms\": true,\r\n    \"fullName\": \"Nature Scot\",\r\n    \"companyOrganisation\": \"NatureScot\",\r\n    \"addressLine1\": \"Great Glen House\",\r\n    \"addressLine2\": \"\",\r\n    \"addressTown\": \"Inverness\",\r\n    \"addressCounty\": \"\",\r\n    \"addressPostcode\": \"IV3 8NW\",\r\n    \"phoneNumber\": \"01463 725 000\",\r\n    \"emailAddress\": \"licensing@nature.scot\",\r\n    \"createdByLicensingOfficer\": \"939123\",\r\n    \"setts\": [\r\n        {\r\n            \"id\": \"ABC123\",\r\n            \"gridReference\": \"NH63054372\",\r\n            \"entrances\": 5\r\n        },\r\n        {\r\n            \"id\": \"DEF456\",\r\n            \"gridReference\": \"NH63044379\",\r\n            \"entrances\": 2\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Application Created By LO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Returned object matches posted object', function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property('convictions');",
							"    pm.expect(jsonData).to.have.property('complyWithTerms');",
							"    ",
							"    pm.expect(jsonData).to.have.property('fullName');",
							"    pm.expect(jsonData).to.have.property('companyOrganisation');",
							"    pm.expect(jsonData).to.have.property('addressLine1');",
							"    pm.expect(jsonData).to.have.property('addressLine2');",
							"    pm.expect(jsonData).to.have.property('addressTown');",
							"    pm.expect(jsonData).to.have.property('addressCounty');",
							"    pm.expect(jsonData).to.have.property('addressPostcode');",
							"    pm.expect(jsonData).to.have.property('phoneNumber');",
							"    pm.expect(jsonData).to.have.property('emailAddress');",
							"    pm.expect(jsonData).to.have.property('createdByLicensingOfficer');",
							"    pm.expect(jsonData).to.have.property('Setts');",
							"",
							"    pm.expect(jsonData.Setts.length).to.eql(2);",
							"",
							"    pm.expect(jsonData.Setts[0]).to.have.property('id');;",
							"    pm.expect(jsonData.Setts[0]).to.have.property('gridRef');",
							"    pm.expect(jsonData.Setts[0]).to.have.property('entrances');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Return",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.have.status('Created');",
							"});",
							"",
							"pm.test('Location is present', function () {",
							"    pm.response.to.have.header('Location');",
							"    ",
							"    ",
							"    pm.expect(pm.response.headers.get('Location')).to.include(",
							"        `http://localhost:3003/standard-forestry-operations-api/v2/applications/`",
							"    );",
							"});",
							"",
							"pm.collectionVariables.set(\"SFO_NEW_APP_RETURN_ID\", pm.response.headers.get('Location').split('/').pop());",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"didYouUse\": true,\n    \"startDate\": \"2021-07-18T13:39:49.598Z\",\n    \"endDate\": \"2021-07-18T13:39:49.598Z\",\n    \"compliance\": true,\n    \"complianceDetails\": \"Some compliance details.\",\n    \"settIds\": [\"1\", \"2\"],\n    \"confirmDeclaration\": true,\n    \"uploadUUIDs\": [\n        {\n            \"uuid\": \"1234-abcd-1234-abcd\",\n            \"fileName\": \"Test_1.jpg\"\n        },\n        {\n            \"uuid\": \"2345-abcd-2345-abcd\",\n            \"fileName\": \"Test_2.jpg\"\n        },\n        {\n            \"uuid\": \"3456-abcd-3456-abcd\",\n            \"fileName\": \"Test_3.jpg\"\n        },\n        {\n            \"uuid\": \"4567-abcd-4567-abcd\",\n            \"fileName\": \"Test_4.jpg\"\n        }\n    ]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}/returns",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}",
						"returns"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Application With Returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status('OK');",
							"});",
							"",
							"pm.test('Returned object matches posted object', function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property('convictions');",
							"    pm.expect(jsonData).to.have.property('complyWithTerms');",
							"    ",
							"    pm.expect(jsonData).to.have.property('fullName');",
							"    pm.expect(jsonData).to.have.property('companyOrganisation');",
							"    pm.expect(jsonData).to.have.property('addressLine1');",
							"    pm.expect(jsonData).to.have.property('addressLine2');",
							"    pm.expect(jsonData).to.have.property('addressTown');",
							"    pm.expect(jsonData).to.have.property('addressCounty');",
							"    pm.expect(jsonData).to.have.property('addressPostcode');",
							"    pm.expect(jsonData).to.have.property('phoneNumber');",
							"    pm.expect(jsonData).to.have.property('emailAddress');",
							"    pm.expect(jsonData).to.have.property('Setts');",
							"    pm.expect(jsonData).to.have.property('Returns');",
							"",
							"    pm.expect(jsonData.Setts.length).to.eql(2);",
							"",
							"    pm.expect(jsonData.Setts[0]).to.have.property('id');;",
							"    pm.expect(jsonData.Setts[0]).to.have.property('gridRef');",
							"    pm.expect(jsonData.Setts[0]).to.have.property('entrances');",
							"",
							"    pm.expect(jsonData.Returns.length).to.eql(1);",
							"    ",
							"    pm.expect(jsonData.Returns[0]).to.have.property('id');;",
							"    pm.expect(jsonData.Returns[0]).to.have.property('ApplicationId');;",
							"    pm.expect(jsonData.Returns[0]).to.have.property('usedLicence');;",
							"    pm.expect(jsonData.Returns[0]).to.have.property('compliance');",
							"    pm.expect(jsonData.Returns[0]).to.have.property('complianceDetails');",
							"    pm.expect(jsonData.Returns[0]).to.have.property('startDate');",
							"    pm.expect(jsonData.Returns[0]).to.have.property('endDate');",
							"    pm.expect(jsonData.Returns[0]).to.have.property('confirmedDeclaration');",
							"    pm.expect(jsonData.Returns[0]).to.have.property('createdByLicensingOfficer');",
							"    pm.expect(jsonData.Returns[0]).to.have.property('SettPhotos');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('id');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('ReturnId');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('SettId');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('beforeObjConRef');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('afterObjConRef');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('beforeFileName');",
							"    pm.expect(jsonData.Returns[0].SettPhotos[0]).to.have.property('afterFileName');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reason\": \"Nature Scot Reason\",\r\n    \"createdBy\": \"989745\",\r\n    \"isRevoked\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET revoked application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404 Not Found', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.have.status('Not Found');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3003/standard-forestry-operations-api/v2/applications/{{SFO_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3003",
					"path": [
						"standard-forestry-operations-api",
						"v2",
						"applications",
						"{{SFO_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "SFO_API_PORT",
			"value": "3003"
		},
		{
			"key": "SFO_API_PATH_PREFIX",
			"value": "standard-forestry-operations-api"
		},
		{
			"key": "SFO_NEW_APP_ID",
			"value": ""
		},
		{
			"key": "SFO_NEW_APP_RETURN_ID",
			"value": ""
		},
		{
			"key": "SFO_NEW_SETT_ID",
			"value": ""
		},
		{
			"key": "SFO_NEW_NOTE_ID",
			"value": ""
		}
	]
}